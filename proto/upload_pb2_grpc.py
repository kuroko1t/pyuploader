# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import upload_pb2 as upload__pb2


class UploadStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Fileup = channel.stream_stream(
        '/Upload/Fileup',
        request_serializer=upload__pb2.Tdata.SerializeToString,
        response_deserializer=upload__pb2.Tdata.FromString,
        )


class UploadServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Fileup(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UploadServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Fileup': grpc.stream_stream_rpc_method_handler(
          servicer.Fileup,
          request_deserializer=upload__pb2.Tdata.FromString,
          response_serializer=upload__pb2.Tdata.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Upload', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
